{"version":3,"sources":["store/actions/postAction.js","components/ClientPostDetail.js","components/ClientPostList.js","components/carousel.js","components/socialMedia.js","components/nav.js","components/twitter-feed.js","components/footer.js","components/Homepage.js","components/Post.js","components/About.js","components/Contact.js","components/PostDetail.js","components/PostList.js","components/AddPost.js","App.js","serviceWorker.js","store/reducers/postReducer.js","store/rootReducer.js","index.js","localStorage.js"],"names":["url","fetchPosts","dispatch","type","info","status","axios","get","then","response","posts","data","map","post","payload","fetchPostSuccess","catch","error","fetchPostFailure","message","fetchPost","id","res","fetchSinglePostSuccess","err","ClientPostDetail","stats","readingTime","content","className","style","textDecoration","color","to","src","thumbnailImageUrl","title","postedOn","description","text","views","ClientPostList","postReducer","useSelector","state","key","MyCarousel","fade","dotPosition","autoplay","imageUrl","atl","SocialMedia","alt","Nav","Navbar","fixed","Brand","TwitterFeed","data-theme","lang","dir","href","Footer","useDispatch","useState","name","email","subscriber","setSubscriber","handleChange","e","target","value","onSubmit","addSubscriberSuccess","console","addSubscriber","preventDefault","log","onChange","placeholder","Homepage","useEffect","Post","props","match","params","selectedPost","find","likes","postlike","setPostlike","comment","commentor","setDcomment","TextArea","Input","setLikes","dislikes","setDislikes","action","setAction","actions","onClick","createElement","LikeFilled","LikeOutlined","React","DislikeFilled","DislikeOutlined","tags","tag","marginRight","fontSize","totalComments","escapeHtml","shape","icon","HeartOutlined","size","Sendlike","Item","rows","obj","upadatedComment","addCommentSuccess","addComment","comments","avatar","author","datetime","commentedOn","backgroundColor","display","justifyContent","flexDirection","replies","reply","repliedBy","repliedOn","About","Contact","PostDetail","delete","deletePostSuccess","PostList","AddPost","categoryId","setPost","margin","addNewPostSuccess","addNewPostFailure","addPost","htmlFor","App","exact","path","component","Boolean","window","location","hostname","initState","loading","newPost","filter","rootReducer","combineReducers","presistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aad8371e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\nconst FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nconst FETCH_POSTS_FAILURE = 'FETCH_POSTS_FAILURE';\n\nconst FETCH_SINGLE_POST_REQUEST = 'FETCH_SINGLE_POST_REQUEST';\nconst FETCH_SINGLE_POST_SUCCESS = 'FECTH_SINGLE_POST_SUCCESS';\nconst FETCH_SINGLE_POST_FAILURE = 'FECTH_SINGLE_POST_FAILUR';\n\nconst SEARCH_POSTS = 'SEARCH_POSTS';\nconst ADD_COMMENT = 'ADD_COMMENT';\nconst ADD_SUBSCRIBER = 'ADD_SUBSCRIBER';\n\nconst ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nconst ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nconst DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nconst DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nconst DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\n\n// const url = 'https://athenanetworks.herokuapp.com/post';\nconst url = 'http://www.teluguphantom.com/post';\n\nexport const fetchPostRequest = () => {\n  return {\n    type: FETCH_POSTS_REQUEST,\n    info: 'Requesting Fetch posts',\n    status: 'orange',\n  };\n};\n\nexport const fetchPostSuccess = posts => {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    info: 'Fetched posts Successfully',\n    payload: posts,\n    status: 'green',\n  };\n};\nexport const fetchSinglePostRequest = () => {\n  return {\n    type: FETCH_SINGLE_POST_REQUEST,\n    info: `Requesting to fetch post`,\n    status: 'orange',\n  };\n};\nexport const fetchSinglePostSuccess = post => {\n  return {\n    type: FETCH_SINGLE_POST_SUCCESS,\n    info: `Post fetched successfully`,\n    payload: post,\n\n    status: 'green',\n  };\n};\nexport const fetchSinglePostFailure = error => {\n  return {\n    type: FETCH_SINGLE_POST_FAILURE,\n    info: 'failed to fetch post',\n    payload: error,\n    status: 'red',\n  };\n};\nexport const fetchPostFailure = error => {\n  return {\n    type: FETCH_POSTS_FAILURE,\n    info: 'Fetched posts Failed',\n    payload: error,\n    status: 'red',\n  };\n};\nexport const searchPost = posts => {\n  return {\n    type: SEARCH_POSTS,\n    info: 'Searching',\n    payload: posts,\n    status: 'Searched',\n  };\n};\n\nexport const addNewPostRequest = () => {\n  return {\n    type: ADD_POST_REQUEST,\n    info: ' Requesting to add new post',\n    status: 'orange',\n  };\n};\nexport const addNewPostSuccess = post => {\n  return {\n    type: ADD_POST_SUCCESS,\n    info: 'Post added Successfully',\n    status: 'green',\n    payload: post,\n  };\n};\nexport const addNewPostFailure = error => {\n  return {\n    type: ADD_POST_FAILURE,\n    info: 'Failed to add Post',\n    status: 'red',\n    payload: error,\n  };\n};\nexport const deletePostRequest = () => {\n  return {\n    type: DELETE_POST_REQUEST,\n    info: 'Requesting to delete post',\n    status: 'orange',\n  };\n};\nexport const deletePostSuccess = id => {\n  return {\n    type: DELETE_POST_SUCCESS,\n    info: 'Deleted post Successfully',\n    status: 'green',\n    payload: id,\n  };\n};\nexport const deletePostFailure = error => {\n  return {\n    type: DELETE_POST_FAILURE,\n    info: 'Failed to delete post',\n    status: 'red',\n    payload: error,\n  };\n};\n\nexport const addCommentSuccess = payload => {\n  return {\n    type: ADD_COMMENT,\n    info: 'Comment added successfully',\n    status: 'green',\n    payload: payload,\n  };\n};\nexport const addSubscriberSuccess = subscriber => {\n  return {\n    type: ADD_SUBSCRIBER,\n    info: 'Added new subscriber successfully',\n    status: 'green',\n    payload: subscriber,\n  };\n};\nexport const fetchPosts = () => {\n  return function (dispatch) {\n    dispatch(fetchPostRequest());\n\n    axios\n      .get(url)\n      .then(response => {\n        const posts = response.data.map(post => post);\n        dispatch(fetchPostSuccess(posts));\n      })\n      .catch(error => {\n        dispatch(fetchPostFailure(error.message));\n      });\n  };\n};\n\nexport const fetchPost = id => {\n  return function (dispatch) {\n    dispatch(fetchSinglePostRequest(id));\n\n    axios\n      .get(url + `/${id}`)\n      .then(res => {\n        const post = res.data;\n        dispatch(fetchSinglePostSuccess(post));\n      })\n      .catch(err => {\n        dispatch(fetchSinglePostFailure(err.response.data));\n      });\n  };\n};\nexport const search = keyword => {\n  return function (dispatch) {\n    axios\n      .get(url + `/search/${keyword}`)\n      .then(res => {\n        dispatch(searchPost(res.data.data));\n        console.log(res);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n};\nexport const addPost = post => {\n  return function (dispatch) {\n    dispatch(addNewPostRequest());\n    axios\n      .post(url, post)\n      .then(res => {\n        dispatch(addNewPostSuccess(res.data));\n      })\n      .catch(error => {\n        dispatch(addNewPostFailure(error.response.data));\n      });\n  };\n};\nexport const deletePost = id => {\n  return function (dispatch) {\n    dispatch(deletePostRequest());\n    axios\n      // .delete(`https://athenanetworks.herokuapp.com/post/${id}`)\n      .delete(`http://localhost:8080/post/${id}`)\n      .then(res => {\n        dispatch(deletePostSuccess(id));\n      })\n      .catch(err => {\n        dispatch(deletePostFailure(err.response.data));\n      });\n  };\n};\n\nexport const addComment = (id, obj) => {\n  return function (dispatch) {\n    axios\n      // .post(`https://athenanetworks.herokuapp.com/comment/${id}`, obj)\n      .post(`http://localhost:8080/comment/${id}`, obj)\n      .then(res => {\n        const payload = { id: id, upadatedComment: res.data };\n        dispatch(addCommentSuccess(payload));\n      })\n      .catch(err => {});\n  };\n};\nexport const Sendlike = id => {\n  return function (dispatch) {\n    axios\n      // .get(`https://athenanetworks.herokuapp.com/like/${id}`)\n      .get(`http://localhost:8080/like/${id}`)\n      .then(res => {\n        // dispatch(fetchPosts());\n      })\n      .catch(err => {});\n  };\n};\nexport const addSubscriber = subscriber => {\n  return function (dispatch) {\n    axios\n      // .post('https://athenanetworks.herokuapp.com/subscribers', subscriber)\n      .post('http://localhost:8080/subscribers', subscriber)\n      .then(res => {\n        dispatch(addSubscriberSuccess(res.data));\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n};\n\n// const ADD_POST = 'ADD_POST';\n// const DELETE_POST = 'DELETE_POST';\n// export const deletePost = id => {\n//   return { type: DELETE_POST, payload: id };\n// };\n\n// export const addPost = post => {\n//   return { type: ADD_POST, payload: post };\n// };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport readingTime from 'reading-time';\n\nexport const ClientPostDetail = ({ post }) => {\n  const stats = readingTime(post.content);\n  return (\n    <div className=\"post-detail-main\">\n      <Link style={{ textDecoration: 'none', color: '#3d3d3d' }} to={`/post/${post.id}`}>\n        <div className=\"post-detail\">\n          <img src={post.thumbnailImageUrl} className=\"post-thumbnail\" />\n            <span className=\"h ptitle\">{post.title}</span>\n          <h6 className=\"date\"> Published on {post.postedOn}</h6>\n          <p>{post.description}</p>\n        </div>\n        <div className=\"comps\">\n          <ul>\n            <li className=\"Reading-time\">{stats.text}</li>\n            {/* <li>{post.totalComments}</li>\n          <li>{post.likes}</li> */}\n            <li>\n              <img src=\"https://img.icons8.com/fluent-systems-filled/12/000000/visible.png\" />\n            </li>\n            <li style={{}}>{post.views}</li>\n          </ul>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\n","import React from \"react\";\nimport {ClientPostDetail} from \"./ClientPostDetail\";\nimport { useSelector } from \"react-redux\";\n\nexport const ClientPostList = () => {\n  const { postReducer } = useSelector(state => state)\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {postReducer.posts &&\n          postReducer.posts.map((post) => <ClientPostDetail post={post} key={post.id} />)}\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Carousel } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst MyCarousel = () => {\n  const { postReducer } = useSelector(state => state);\n\n  return (\n    <Carousel fade dotPosition=\"right\" autoplay>\n      {postReducer.posts.map(post => (\n        <div className=\"car\" key={post.id}>\n          <img className=\"car-image\" src={post.imageUrl} atl={post.title} />\n          <h1 className=\"car-text heading\">{post.title}</h1>\n          {/* <p className=\"car-text sub-heading\" style={{  }}>\n            {post.description}\n          </p> */}\n        </div>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default MyCarousel;\n\n// <div>\n// <h3 style={contentStyle}>One</h3>\n// </div>\n// <div>\n// <h3 style={contentStyle}>Two</h3>\n// </div>\n// <div>\n// <h3 style={contentStyle}>Three</h3>\n// </div>\n// <div>\n// <h3 style={contentStyle}>Four</h3>\n// </div>\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SocialMedia = () => {\n  return (\n    <ul className=\"follow\">\n      <Link to=\"/\">\n        <li className=\"Facebook\">\n          <img src=\"https://img.icons8.com/fluent/55/000000/facebook-new.png\" alt=\"Facebook\" />\n        </li>\n      </Link>\n      <Link to=\"/\">\n        <li className=\"Twitter\">\n        <img src=\"https://img.icons8.com/color/55/000000/twitter-circled.png\" alt=\"Twitter\"/>       \n         </li>\n      </Link>\n      <Link to=\"/\">\n        <li className=\"Instagram\">\n          <img src=\"https://img.icons8.com/fluent/55/000000/instagram-new.png\" alt=\"Instagram\" />\n        </li>\n      </Link>\n      <Link to=\"/\">\n        <li className=\"Spotify\">\n          <img src=\"https://img.icons8.com/fluent/55/000000/spotify.png\" alt=\"Spotify\" />\n        </li>\n      </Link>\n    </ul>\n  );\n};\n\nexport default SocialMedia;\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nconst Nav = () => {\n  return (\n    <div>\n      <Navbar fixed=\"top\" className=\"navbar\">\n        <div className=\" container-fluid\">\n          {/* <div className=\"brand-title \"> */}\n          <Navbar.Brand>\n            <Link to=\"/\" style={{ color: 'white', textDecoration: 'none' }}>\n              TeluguPhantom\n            </Link>\n          </Navbar.Brand>\n\n          {/* </div> */}\n          {/* <Link to=\"#\" className=\"toggle-button\">\n            <span className=\"bar\"></span>\n            <span className=\"bar\"></span>\n            <span className=\"bar\"></span>\n          </Link> */}\n          <div className=\"navbar-links\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home </Link>\n              </li>\n              <li>\n                <Link to=\"/about\">About </Link>\n              </li>\n              <li>\n                <Link to=\"/contact\">Contact </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nconst TwitterFeed = () => {\n  return (\n    <blockquote className=\"twitter-tweet\" data-theme=\"light\">\n      <p lang=\"en\" dir=\"ltr\">\n        watched <a href=\"https://twitter.com/hashtag/FastFurious7?src=hash&amp;ref_src=twsrc%5Etfw\">#FastFurious7</a> mov started with{' '}\n        <a href=\"https://twitter.com/steveaoki?ref_src=twsrc%5Etfw\">@steveaoki</a>{' '}\n        <a href=\"https://twitter.com/hashtag/Boneless?src=hash&amp;ref_src=twsrc%5Etfw\">#Boneless</a> and{' '}\n        <a href=\"https://twitter.com/davidguetta?ref_src=twsrc%5Etfw\">@davidguetta</a>{' '}\n        <a href=\"https://twitter.com/kazjames?ref_src=twsrc%5Etfw\">@kazjames</a>{' '}\n        <a href=\"https://twitter.com/hashtag/BlastOff?src=hash&amp;ref_src=twsrc%5Etfw\">#BlastOff</a> &amp;{' '}\n        <a href=\"https://twitter.com/djsnake?ref_src=twsrc%5Etfw\">@djsnake</a>{' '}\n        <a href=\"https://twitter.com/hashtag/getlow?src=hash&amp;ref_src=twsrc%5Etfw\">#getlow</a> is awesome{' '}\n        <a href=\"https://twitter.com/hashtag/OneLastRide?src=hash&amp;ref_src=twsrc%5Etfw\">#OneLastRide</a>\n      </p>\n      &mdash; saiteja-konda (@kondasaitej)\n      <a href=\"https://twitter.com/kondasaitej/status/584062120267907073?ref_src=twsrc%5Etfw\">April 3, 2015</a>\n    </blockquote>\n  );\n};\n\nexport default TwitterFeed;\n","import React from 'react';\nimport { Input } from 'antd';\nimport TwitterFeed from './twitter-feed';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addSubscriber } from '../store/actions/postAction';\n\nconst Footer = () => {\n  const dispatch = useDispatch();\n\n  const [subscriber, setSubscriber] = useState({\n    name: '',\n    email: '',\n  });\n  function handleChange(e) {\n    setSubscriber({ ...subscriber, [e.target.name]: e.target.value });\n  }\n  function handleSubmit(e) {\n    dispatch(addSubscriber(subscriber));\n    e.preventDefault();\n    console.log(subscriber);\n    setSubscriber({\n      name: '',\n      email: '',\n    });\n  }\n  return (\n    <div>\n      <div className=\" footer top\">\n        <div className=\"threediv\">\n          <div className=\"container innerdiv\">\n            <div>\n              <h5>TWITTER FEED</h5>\n              <hr />\n              <TwitterFeed />\n            </div>\n          </div>\n          <div className=\"container innerdiv\">\n            <h5>INSTAGRAM PHOTOS</h5>\n\n            <hr />\n          </div>\n          <div className=\"container innerdiv\">\n            <h5>NEWSLETTER</h5>\n            <hr />\n            <form onSubmit={handleSubmit}>\n              <Input name=\"name\" onChange={handleChange} value={subscriber.name} placeholder=\"Name\" />\n              <Input name=\"email\" onChange={handleChange} value={subscriber.email} placeholder=\"Email\" />\n              <button className=\"btn btn-dark btn-block sub\"> Subscribe</button>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer bottom\">\n        <h1 className=\"Logo\">TeluguPhantom</h1>\n        <hr className=\"hr\" />\n        <ul>\n          <li>Home</li>\n          <li>About</li>\n          <li>Contact</li>\n        </ul>\n        <li className=\"copyright\">Copyright TeluguPhantom All rights reserved</li>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchPosts } from '../store/actions/postAction';\nimport { ClientPostList } from './ClientPostList';\nimport MyCarousel from './carousel';\nimport SocialMedia from './socialMedia';\nimport { BackTop } from 'antd';\nimport Nav from './nav';\nimport Footer from './footer';\n\nexport const Homepage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPosts());\n  });\n  return (\n    <div>\n      <Nav />\n      <MyCarousel />\n      <BackTop />\n      <strong className=\"site-back-top-basic\" />\n      <div className=\"container mycontainer\">\n        <div className=\"row \">\n          <div className=\"col-md-8\">\n            <h3 className=\"mt-3\">NEWS</h3>\n            <hr className=\"hr6\" />\n            <ClientPostList />\n            <h3 className=\"controller\"> TRENDING</h3>\n            <hr className=\"hr7\" />\n            <ClientPostList />\n          </div>\n          <div className=\"col-md-4\">\n            <h3>LATEST</h3>\n            <hr className=\"hr8\" />\n            <div className=\"scroll\">\n              <ClientPostList />\n              <BackTop />\n            </div>\n            {/* <div>\n              <h3>SPOTIFY PLAYLIST</h3>\n              <hr className=\"hr9\" />\n              <iframe\n                title=\"This is a unique title\"\n                className=\"spotify-frame\"\n                src=\"https://open.spotify.com/embed/playlist/3ehtiZyniZjVSs9Tv5BwCl\"\n                height=\"380\"\n                width=\"350\"\n                frameBorder=\"0\"\n                allowtransparency=\"true\"\n                allow=\"encrypted-media\"\n              ></iframe>\n            </div> */}\n            <div>\n              <h3 className=\"controller\">FIND US</h3>\n              <hr className=\"hr10\" />\n              <div>\n                <SocialMedia />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n","import React, { useState, createElement, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Sendlike, addComment, fetchPosts, fetchPost } from '../store/actions/postAction';\nimport ReactMarkdown from 'react-markdown';\nimport { Comment, Tooltip, Avatar, Form, Button, Input, BackTop } from 'antd';\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled, HeartOutlined } from '@ant-design/icons';\nimport { ClientPostList } from './ClientPostList';\nimport SocialMedia from './socialMedia';\nimport Nav from './nav';\nimport Footer from './footer';\n\nexport const Post = props => {\n  const dispatch = useDispatch();\n  const { id } = props.match.params;\n  useEffect(() => {\n    dispatch(fetchPost(id));\n  }, [fetchPost]);\n  const { postReducer } = useSelector(state => state);\n  // eslint-disable-next-line\n  let selectedPost = postReducer.posts?.find(post => post.id == id);\n  const [post] = useState(selectedPost);\n  const [postlike, setPostlike] = useState(post.likes);\n\n  const [comment, setDcomment] = useState({\n    comment: '',\n    commentor: '',\n  });\n  const { TextArea } = Input;\n\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n  const [action, setAction] = useState(null);\n\n  const like = () => {\n    setLikes(1);\n    setDislikes(0);\n    setAction('liked');\n  };\n\n  const dislike = () => {\n    setLikes(0);\n    setDislikes(1);\n    setAction('disliked');\n  };\n\n  const actions = [\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={like}>\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n        <span className=\"comment-action\">{likes}</span>\n      </span>\n    </Tooltip>,\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span onClick={dislike}>\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n        <span className=\"comment-action\">{dislikes}</span>\n      </span>\n    </Tooltip>,\n    <span key=\"comment-basic-reply-to\">Reply to</span>,\n  ];\n\n  function handleChange(e) {\n    setDcomment({ ...comment, [e.target.name]: e.target.value });\n  }\n  function handleComment() {\n    dispatch(addComment(id, comment), fetchPosts());\n    setDcomment({\n      comment: '',\n      commentor: '',\n    });\n  }\n  function handleLike() {\n    setPostlike(postlike + 1);\n    dispatch(Sendlike(id));\n  }\n  return (\n    <div>\n      <Nav />\n      <div className=\"container mycontainer\">\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n              <div className=\"\">\n                <h4 className=\"h\">{post.title}</h4>\n                <h6 className=\"date\"> Published on {post.postedOn}</h6>\n                <div>\n                  <h6>Tags</h6>\n                  {post.tags?.map(tag => (\n                    <button className=\" btn btn-small black\" style={{ marginRight: '5px', fontSize: '10px' }} key={tag.id}>\n                      {tag.name}\n                    </button>\n                  ))}\n                </div>\n                <div className=\"comments-likes\">\n                  <h6 className=\"h\">\n                    Comments <span>{post.totalComments} </span>\n                  </h6>\n                  <h6 className=\"h\">\n                    Likes <span>{postlike}</span>\n                  </h6>\n                  <h6 className=\"h\">\n                    Views <span>{post.views}</span>\n                  </h6>\n                </div>\n                <img className=\"postImage\" src={post.imageUrl} alt={post.title} />\n                <section>\n                  <ReactMarkdown className=\"content\" escapeHtml={false}>\n                    {post.content}\n                  </ReactMarkdown>\n                  <Button shape=\"circle\" icon={<HeartOutlined />} size={'large'} className=\"btn red\" onClick={handleLike} />\n                </section>\n                <div>\n                  <div className=\"comment-section\">\n                    <h5 className=\"h\">Add Comment</h5>\n                    <Form.Item>\n                      <Input type=\"text\" value={comment.commentor} name=\"commentor\" onChange={handleChange} placeholder=\"Enter you name\" />\n                    </Form.Item>\n                    <Form.Item>\n                      <TextArea\n                        rows={4}\n                        name=\"comment\"\n                        onChange={handleChange}\n                        placeholder=\"Enter your comment here\"\n                        value={comment.comment}\n                      />\n                    </Form.Item>\n                    <Button className=\"btn black\" type=\"submit\" onClick={handleComment}>\n                      Comment\n                    </Button>\n                  </div>\n\n                  {post.comments?.map(comment => (\n                    <div key={comment.id}>\n                      <Comment\n                        actions={actions}\n                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" alt=\"Han Solo\" />}\n                        key={comment.id}\n                        author={comment.commentor}\n                        content={comment.comment}\n                        datetime={comment.commentedOn}\n                      />\n                      <div style={{ backgroundColor: 'floralwhite', display: 'flex', justifyContent: 'flex-end', flexDirection: 'row' }}>\n                        {comment.replies?.map(reply => (\n                          <div key={reply.id}>\n                            <p>{reply.reply}</p>\n                            <p>{reply.repliedBy}</p>\n                            <p>{reply.repliedOn}</p>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n          </div>\n          <div className=\"col-md-4\">\n            <h3>LATEST</h3>\n            <hr className=\"hr8\" />\n            <div className=\"scroll\">\n              <ClientPostList />\n              <BackTop />\n            </div>\n            {/* <div>\n              <h3>SPOTIFY PLAYLIST</h3>\n              <hr className=\"hr9\" />\n              <iframe\n                title=\"This is a unique title\"\n                className=\"spotify-frame\"\n                src=\"https://open.spotify.com/embed/playlist/3ehtiZyniZjVSs9Tv5BwCl\"\n                height=\"380\"\n                width=\"350\"\n                frameBorder=\"0\"\n                allowtransparency=\"true\"\n                allow=\"encrypted-media\"\n              ></iframe>\n            </div> */}\n            <div>\n              <h3 className=\"controller\">FIND US</h3>\n              <hr className=\"hr10\" />\n              <div>\n                <SocialMedia />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\nexport default Post;\n","import React from 'react';\nconst About = () => {\n  return (\n    <div className=\"mycontainer\">\n      <div className=\"\">\n        <h1>About</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nconst Contact = () => {\n  return (\n    <div className=\"mycontainer\">\n      <div className=\"\">\n        <h1>Contact</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deletePost } from '../store/actions/postAction';\nimport { Link } from 'react-router-dom';\n\nexport const PostDetail = ({ post }) => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"col s12 m6\">\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <Link to={`/post/${post.id}`}>\n            <span className=\"card-title\">{post.title}</span>\n          </Link>\n          <p>{post.description}</p>\n        </div>\n        <div className=\"card-action\">\n          <button onClick={() => dispatch(deletePost(post.id))} className=\"btn red\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {PostDetail} from \"./PostDetail\";\nimport { useSelector } from \"react-redux\";\n\nexport const PostList = () => {\n  const { postReducer } = useSelector(state => state)\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {postReducer.posts &&\n          postReducer.posts.map((post) => <PostDetail post={post} key={post.id} />)}\n      </div>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost, fetchPosts } from '../store/actions/postAction';\nimport { PostList } from './PostList';\n\nexport const AddPost = () => {\n  const [post, setPost] = useState({\n    title: '',\n    description: '',\n    content: '',\n    categoryId: 1,\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    setPost({ ...post, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addPost(post));\n    setPost({\n      title: '',\n      description: '',\n      content: '',\n      categoryId: 1,\n      imageUrl: '',\n      thumbnailImageUrl: '',\n    });\n  };\n\n  return (\n    <div className=\"container\" style={{ margin: '4rem auto' }}>\n      <h5 className=\"blue-text center-align\">Admin</h5>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-field\">\n          <label htmlFor=\"post_title\">Title</label>\n          <input onChange={handleChange} value={post.title} type=\"text\" name=\"title\" />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"post_title\">Description</label>\n          <input onChange={handleChange} value={post.description} type=\"text\" name=\"description\" />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"post_content\">Content</label>\n          <textarea onChange={handleChange} value={post.content} name=\"content\" className=\"materialize-textarea\"></textarea>\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"post_imageUrl\">imageUrl</label>\n          <input onChange={handleChange} value={post.imageUrl} type=\"text\" name=\"imageUrl\" />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"post_thumbnailImageUrl\">thumbnailImageUrl</label>\n          <input onChange={handleChange} value={post.thumbnailImageUrl} type=\"text\" name=\"thumbnailImageUrl\" />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn blue\">\n            Submit\n            {/* <i className=\"material-icons right\">send</i> */}\n          </button>\n        </div>\n      </form>\n      <PostList />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Homepage } from './components/Homepage';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Post from './components/Post';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport { AddPost } from './components/AddPost';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/post/:id\" component={Post} />\n          <Route exact path=\"/admin\" component={AddPost} />\n          <Homepage />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  posts: [],\n};\n\nconst postReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        posts: action.payload,\n      };\n    case 'SEARCH_POSTS':\n      return {\n        posts: action.payload,\n      };\n    case 'ADD_COMMENT':\n      // const updatedPost = state.posts.find(post => post.id == action.payload.id);\n      // updatedPost.comments.push(action.payload.updateComment);\n      return {\n        posts: [...state.posts],\n      };\n    case 'ADD_POST_SUCCESS':\n      return {\n        posts: [action.payload, ...state.posts],\n      };\n    case 'DELETE_POST_SUCCESS':\n      const newPost = state.posts.filter(post => post.id !== action.payload);\n      return {\n        posts: newPost,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n//  {\n//   ...state,\n//   // posts: updatedPost.comments.push(action.payload.upadatedComment),\n//   console.log(updatedPost);\n// };\n","import { combineReducers } from 'redux';\nimport postReducer from './reducers/postReducer';\nconst rootReducer = combineReducers({\n   postReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport 'antd/dist/antd.css';\nimport './assets/scss/base.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport rootReducer from './store/rootReducer';\nimport { loadState, saveState } from './localStorage';\nimport throttle from 'lodash/throttle';\n\nconst presistedState = loadState();\nconst store = createStore(rootReducer, presistedState, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 500)\n);\n\n// store.subscribe(() => saveState(store.getState()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState)\n    }catch(error) {\n        \n    }\n}"],"sourceRoot":""}